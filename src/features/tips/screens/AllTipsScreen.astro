---
import { EmptyState } from '@/components/empty-state';
import Heading from '@/components/Heading.astro';
import TipCard from '@/features/tips/components/TipCard.astro';
import BaseLayout from '@/layouts/BaseLayout.astro';

import type { CollectionEntry } from 'astro:content';

interface Props {
  tips: Array<CollectionEntry<'tips'>>;
}

const { tips } = Astro.props;

const featuredTips = tips.filter((tip) => tip.data.featured);
const regularTips = tips.filter((tip) => !tip.data.featured);

const pageTitle = "Development Tips | Nicholas Hong";
const pageDescription = "Browse a collection of quick tips and advice on Web Development and Cloud Computing.";
const title = "Latest Tips";
const description = "Browse a collection of quick tips and advice on Web Development and Cloud Computing.";
const noTips = "No tips to display at the moment.";
const featuredTipsLabel = "Featured Tips";
const allTipsLabel = "All Tips";
const tipsAvailableLabel = "tips available";
const tipAvailableLabel = "tip available";
---

<BaseLayout pageTitle={pageTitle} pageDescription={pageDescription}>
  <div class="container mx-auto px-4 py-8">
    <Heading title={title} description={description} />

    {
      tips.length === 0 ? (
        <EmptyState title={noTips} />
      ) : (
        <div class="space-y-12">
          {/* Featured Tips */}
          {featuredTips.length > 0 && (
            <section>
              <h2 class="text-2xl font-semibold mb-6 flex items-center gap-2">
                <span class="text-2xl">‚≠ê</span>
                {featuredTipsLabel}
              </h2>
              <div class="grid gap-6 sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-3 grid-rows-2">
                {featuredTips.map((tip) => (
                  <TipCard tip={tip} />
                ))}
              </div>
            </section>
          )}

          {/* All Regular Tips */}
          <section>
            {regularTips.length > 0 && (
              <h2 class="text-2xl font-semibold mb-6">{allTipsLabel}</h2>
            )}

            {/* Responsive Grid */}
            <div class="grid gap-6 sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-3 grid-rows-2">
              {regularTips.map((tip) => (
                <TipCard tip={tip} />
              ))}
            </div>
          </section>

          {/* Stats */}
          <div class="text-center pt-8 border-t border-border/30">
            <p class="text-sm text-muted-foreground mb-4">
              {tips.length}{' '}
              {tips.length > 1 ? tipsAvailableLabel : tipAvailableLabel}
            </p>
          </div>
        </div>
      )
    }
  </div>
</BaseLayout>
